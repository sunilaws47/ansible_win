- name: Memory usecase
  hosts: dev
  gather_facts: false
  vars:
      status_code:
      Flag:
  tasks:
      - name: ping
        win_ping:
        register: Ping_Status

      - name: Get Total Memory Size
        when: Ping_Status.ping == "pong"
        win_shell: |
          $totalmemory = Get-CimInstance Win32_PhysicalMemory | Measure-Object -Property capacity -Sum | Foreach {"{0:N2}" -f ([math]::round(($_.Sum / 1GB),2))}
          $totalmemory
        register: Memory_Size
        tags: Ping_info


      - name: Get Used Memory percentage
        win_shell: |
          $a=Get-WmiObject Win32_OperatingSystem  | fl *freePhysical* | Out-String
          $b=Get-WmiObject Win32_OperatingSystem  | fl *totalvisiblememory* | Out-String
          $a = $a -replace '\D+(\d+)','$1'
          $b = $b  -replace '\D+(\d+)','$1'
          $a=$b-$a
          [math]::Round($a/$b*10000)/100
        register: current_mem_usage
        tags: Memory_size__info
        
        
      - set_fact:
          used_mem: "Used Memory Size is  {{ current_mem_usage.stdout.split('\n')}}"
      - debug:
         msg:  "{{current_mem_usage.stdout.split('\n') }}%"

      - name: Getting processes list if  Memory usage limit exceeds Threshold value (90%)
        when: current_mem_usage.stdout|int > 90
        win_shell: get-wmiobject WIN32_PROCESS | Sort-Object -Property ws -Descending|Select processname , @{Name="Mem Usage(MB)";Expression={[math]::round($_.ws / 1mb)}},@{Name="ProcessID";Expression={[String]$_.ProcessID}},@{Name="UserID";Expression={$_.getowner().user}}
        register: top_proc_gt
      - debug:
          msg: "{{top_proc_gt}}"

      - name: Waiting for 60 seconds to check again
        pause:
         seconds: 60
         prompt: "Waiting for 60 seconds to check again"

      - name: Check Again Used Memory percentage
        win_shell: |
          $a=Get-WmiObject Win32_OperatingSystem  | fl *freePhysical* | Out-String
          $b=Get-WmiObject Win32_OperatingSystem  | fl *totalvisiblememory* | Out-String
          $a = $a -replace '\D+(\d+)','$1'
          $b = $b  -replace '\D+(\d+)','$1'
          $a=$b-$a
          [math]::Round($a/$b*10000)/100
        register: current_mem_usage_again
        tags: Memory_size__info_again
      - set_fact:
          used_mem_again: "Used Memory Size is  {{ current_mem_usage_again.stdout.split('\n')}}"
      - debug:
         msg:  "{{used_mem_again }}%"

      - name: If again Memory usage limit exceeds Threshold Value, transfer ticket to L2
        when: current_mem_usage_again.stdout|int > 90
        block:
        - set_fact:
           l2_group: "Unix_Team"
           transfer_msg: "  Memory usage is still greater than  threshold value. current usage is {{ current_mem_usage_again.stdout|int }}% , hence transfering ticket to l2_group"
        - debug:
           msg:  "{{transfer_msg }}%"
          when: current_mem_usage_again.stdout|int > 90

      - name: If again Memory usage is less than equal to <= 90, Issue resolved.
        when: current_mem_usage_again.stdout|int <= 90
        block:
        - set_fact:
            transfer_msg: "Memory usage is still less than Threshold value ( 90 %) and current uses is {{ current_mem_usage_again.stdout|int }} %, hence issue has been resoved"
        - debug:
            msg:  "{{transfer_msg }}%"
          when: current_mem_usage.stdout|int <= 90


